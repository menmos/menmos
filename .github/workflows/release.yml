name: release

on:
  push:
    tags:
      - '*'

jobs:
  artifacts:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            mmos_artifact: mmos-linux-amd64
            menmosd_artifact: menmosd-linux-amd64
            amphora_artifact: amphora-linux-amd64
            mmos_src: mmos
            menmosd_src: menmosd
            amphora_src: amphora
          - os: macos-latest
            mmos_artifact: mmos-macos-amd64
            menmosd_artifact: menmosd-macos-amd64
            amphora_artifact: amphora-macos-amd64
            mmos_src: mmos
            menmosd_src: menmosd
            amphora_src: amphora
          - os: windows-latest
            mmos_artifact: mmos-windows-amd64.exe
            menmosd_artifact: menmosd-windows-amd64.exe
            amphora_artifact: amphora-windows-amd64.exe
            mmos_src: mmos.exe
            menmosd_src: menmosd.exe
            amphora_src: amphora.exe
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install OpenSSL
        if: matrix.os == 'windows-latest'
        run: |
          git clone https://github.com/microsoft/vcpkg
          .\vcpkg\bootstrap-vcpkg.bat
          .\vcpkg\vcpkg integrate install
          .\vcpkg\vcpkg install openssl:x64-windows-static-md
        shell: pwsh

      - name: Build/Release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --workspace

      - name: Prepare Assets
        run: |
          mv target/release/${{ matrix.amphora_src }} target/release/${{ matrix.amphora_artifact }}
          mv target/release/${{ matrix.mmos_src }} target/release/${{ matrix.mmos_artifact }}
          mv target/release/${{ matrix.menmosd_src }} target/release/${{ matrix.menmosd_artifact }}
        shell: bash

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/release/${{ matrix.amphora_artifact }}
            target/release/${{ matrix.mmos_artifact }}
            target/release/${{ matrix.menmosd_artifact }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - id: docker-tag
        uses: menmos/docker-tag-from-github-ref-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: menmos/menmosd
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          target: menmosd
          push: true
          tags: |
            menmos/menmosd:latest
            menmos/menmosd:${{ steps.docker-tag.outputs.tag }}
      -
        name: menmos/amphora
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          target: amphora
          push: true
          tags: |
            menmos/amphora:latest
            menmos/amphora:${{ steps.docker-tag.outputs.tag }}
